import random
import copy

import greedyPsuedocount

profilepc = greedyPsuedocount.profilepc
score = greedyPsuedocount.score

def gibbsSampler(dna, k, t, n):
    motifs = []
    best_motifs = []
    for i in range(t):
        rand = random.randrange(len(dna[0]) - k)
        motifs.append(dna[i][rand:rand + k])
    best_motifs = motifs[:]
    for j in range(n):
        i = random.randint(0, t - 1)
        motifs.pop(i)
        profile = profilepc(motifs)
        motifs.insert(i, generateKmer(dna[i], k, profile))
        if score(motifs) < score(best_motifs):
            best_motifs = motifs[:]
    return best_motifs

def generateKmer(text, k, profile):
    n = len(text) - k + 1
    all_kmers = [text[i:i+k] for i in range(n)]
    pr = [calProbKmer(kmer, profile) for kmer in all_kmers]
    index = weightedRandomSelect(pr, n)
    return all_kmers[index]

def calProbKmer(kmer, profile):
    if len(kmer) == 0:
        prob = 0
    else:
        prob = 1
        for i, letter in enumerate(kmer):
            prob *= profile[letter][i]
    return prob

def weightedRandomSelect(pr, n):
    random.seed()
    a = random.random() * sum(pr)
    sum_pr = 0
    for i in range(n - 1):
        if a >= sum_pr and a < sum_pr + pr[i]:
            return i
        sum_pr += pr[i]
    return n - 1

# print(gibbsSampler(
# [
# 'CGCGCGCCCTTGAGCCTCACGCATCAGTCCAGGGAGTGGGCGATTGTAACATCTTTGTACATAGGGTGAGTGCCTGGTCCTGCACCAAAGTCTACAAATATCTTGGCTGACGTCTATATCTGGATTGATCTTAGTCTAAACGAGCCTACTGGGGTCAAGGGAATTCGTCAAAACCCTAGCTAGCGCATGTGTATTCCGTGAAAGCCCCATGTCGTGGTCGCCGCCATGATACGGGTTGCTGTGCAACCGCAAATTCGACTGGGTCGACCTGTGTTTGCCGTTCCTTAAATACCATCTGTGCTTACGCGCGCCCTTGAGC',
# 'CTCACGCATCAGTCCAGGGAGTGGGCGATTGTAACATCTTTGTACATGACCTGAATAATCTTAGGGTGAGTGCCTGGTCCTGCACCAAAGTCTACAAATATCTTGGCTGACGTCTATATCTGGATTGATCTTAGTCTAAACGAGCCTACTGGGGTCAAGGGAATTCGTCAAAACCCTAGCTAGCGCATGTGTATTCCGTGAAAGCCCCATGTCGTGGTCGCCGCCATGATACGGGTTGCTGTGCAACCGCAAATTCGACTGGGTCGACCTGTGTTTGCCGTTCCTTAAATACCATCTGTGCTTACGCGCGCCCTTGAGC',
# 'TTCCTAGACTTAAACGCGTCACGCAAATGCTATGCGGCTATGTTCAGAATAATCTGCGGCGCTTCATTGGAGCGTGTCCCCAACGTCCTTGCCCTAGCCTAGTTACTCGAAAGCGCGAGCATCTCCACAGGATAACTCTCTGTAACGAGAAGGCACTAGGAAGGAGGCAGTGACACGAGCACAGGATGCATACGGAATGTTGTGCATATTGCACGTCGTAAGGTACCGTCTTGAACTTGTACACGGTAAGAATATGCATTTAGCGTCGGATTATTGAGATAACGTCGCTGCCCAATGGCTCCTTGTCCATTTTCGAACT',
# 'CACTGTGACACCGGCAAAGGTTCCCTCTAGCATGAGGGTAATAATCTTGAAGACTAGTATCGTTACACAAGCTGTAGAGGAGAGCTTCGGGAGACTGGGAGCATATCAGGTTGTTGGGTCGTTGAGTCGAGAACTGTTACAACGCGAATCTGTACGGGTCTAACTGTCCAACTGCATATATTTAGTAAATTCCGTACGGATATATTAGGAACGTGGAGTGTTGAGCTGGGCATTGCAAGCAGATGGTCTGTAAAGCTCACCAAGGATTTGGCCTGAATGCGTTTTGCGTGCTGGTGCGGAGGTTGGTTCGCTTACACTT',
# 'CGGGCGGGACAGTTAATATGGCGCCATCGATGCACTGGTGTGAAAACGGAGATGTCGGTTAGCGGAACACCCTCGACAAACGTTAGTCCCTTAAGGCTTGTGCACTGTTGTAATCAATACAGGAGCAAAATCAAAAAACGGATTTGTTGCTTTATCAAGCAATTAAAGTTCTATTAGAACAAATGGTGATGAGTAGTCGAATCTTTTACAAAGCGACGGACGCCAAGATGTTGATCACGTGGCCGTTCCGGCCATGTTTCGCCGTTTTCTCGTTTCTGTAAAAGAAGCATGGGGCGTACCCAGCCTAGTCGCAGTCGGC',
# 'AGAAGCTCGCGGTCGTATGGCACGCGAAGGCCTGGTCGCCCATTGCTGAAACTAGCAAGTAGCAGATACGAGTCAGACCACCATTGTTGCCCTCTAACGCACAGTGTAGTTCACGCGATACAATCTAGGGTAAAGTACTTGGAGCGCGGTCAGCAATCTACAGATTCTCAAATAAGGACTCCACGAGCGTTTCGAGGCTGGCCGCACTGTGCCAGGGAGACCACCATCCGCAGTTTTCGCCTGCAAGGAGATTTTATTTAGGATCGACATGACCCCGAATTTGAGTCACATAATCTAATTCCCCCTTCCTGAGGACACA',
# 'GTTTTTGTGGCATCGAAATTTACTGGGGACGCTCGGCCACCGTCAAAAGCGCGGTGTACGCGATCTGTTAACCGCCACCATCCCGCTCTCTCCACCACCCCACGTTGAGCGAGGAATAGCTTTGCGTGAGTAGAGCTATCTGACAATCGATCACTTCTCCTCCCTTGTTATGCGGCAAATTCACTCACCAAGTCCCGAACCGGTAAACTGGGGGAGCAAATCTGTCGCGCACGGCAGATTTGTATAATCTGCACGAGCAAACCCGCCCTGAACTATCAGACCTTAAGCCTGTGTGTAGACGACTCGAGCATGACTGCCC',
# 'CTCTTGTGTGTTATAGTACATATCAGTCATTTACAGCTCGCCTCATACACTCCCACGTTACGCTATAACTTCTCCCAGGGGGCGCCCCATACCGCAGTCGACTCTTTTAATATAGAGCGTACTTGGATCTTGGTTGACGACCAGCGTATACTGGTGACATGCATTAATATATCACCGGATATTCAATCATGAGTACCCTAATCTCTTCCGTTGTGCGTAGGAGAGACGGCCCCAGGATTAGTCCCCATGCATCCCATGCTCTAGCGTATACGAGCGCGCGTCCGCTGGTCCCAATACTAGCACGCAGAATCTACACATG',
# 'ATCGGCGGAGAGTTGGAGTGATTAAATGGACTTGAGAACCCTGTGCGGGCAGGATCGGGTGTACCGGCAAGACCAAGTAGCCTGCTACCTTGTCCCGTATGCGACGTATAGGCTTAACGCTACGGACGCACTCAGCGGACCTATTATATGGCACAAGCTGCGTGGACTGAGTGTTATAATCTAGGCAAAAGCTGCCTCACTGACCGACAGATGTCGTAATACTTTTTTGGTTTTAATTTGCGAATGCTGCGATCGGGACGCGTAGATATACGTACGGGACCTAGTTATTACAGCGGCTGTCAGACCAAGGGCGCAAGAT',
# 'AACGGAGTAATCTGGCTATCCATGAGAAGTTCAAGACGAGGCGAGCCACTGAGAGCCAATATCCTGACTAAGAGACCTGACATCTTCCGTTCGTCTTTGCTCTCCCGTTACTAGGCCTATGCCAGCGCTGTTCCCGCGAACTGATATGCCTTTGCTTACAGATCTGCATACATACTGTACAAATGCGGATCCAGCGAGTGAGTAATGTAATCTGGCGACGCGTACTGTAGCCGAAATAGAAACTGACCTAATTATGGCAAACAGCTCTAAGCGCCTGTGGGGTCACGCAATTTAACAACTGGGCTGCGTCTTTCTGCTA',
# 'GTCCGGTGGATTCTTCTTCGAGCCTTCTCGAATATCATTGGATGTAGAATAATCTCGCCGTTCGATGCATCACTCCTATGAACGGGTCCATTCCGCCGACGTGACATGCTTGCATGGAATGTTTTGAAAAATAACCTTTCATTATGGGATCATTCAGACTGGACAAAGAAGTCACCTATAACGGCAGGACAGAAAGTGCCGATGTTCAGTGTATAGAGCGGGCGGCAGTATGTATACTCTACGCAGAGGACAGCCTTCGCCAGTGTCCATGGCCTAATCAATTCTGTGCCCGGTTGGATTAATGTTCAACAAACACATC',
# 'TAAGTAGTCTGGATGAGTAGAATAAATCTAGCTACCTAAGGACCAGGGGAGTTTCCCACCTCAGATATGCGCGAGATATGATAGTCCTGACGAACCCCACATGCCTGCTGTACTGTTCGCCGGAGATCTTAGGAGTAGTTCTTTATATGCGCGGACATAGGTATGATCAGGATCGGGCAATCCCTCGATGCCAAGTTAGGCCATATGGGATCCGAACACAATATATCGCCAAGGTTACAACCTGCAAACATGTGTATTTATAAGAACGGTGGCTTTTTTCTGCACCCCGTAATGGTACTCGTTGCCCGGCGACGGGCGA',
# 'TATTAGCCGCGTATGCTGAGCTACGATCAGCTAACCGCGTTCCTATCCGCGGCCGTACCACGAGATCATACACATAGCGACCCGTGAGTGAAGACGCGAACGGGGTTGCCATACGAACCTCCCATCAACAGGATCGTCTTTGAACCCGGAATCTAGATTACTAAAAGAAGCCTTGGGGTCATAGTGGCGCCACCTTAGATCAAAAAGCCTCTATAGATGTCCCAATGCCAGGTACGTCGGACATCTGGGATGAGCCTACCTCTGGACGCCGAAATGAGTAGAATGTACTACTAGCTTGTTTATGGGTCCGGACTTGCAT',
# 'GCTTCTCGATTAGGTTGTACGAGAAACTCAATCAATAGAGCATCCGCAATTGTTAGAATAATCTGAACTTGATTGTGAAGCTGAGAATGAGCCTGGCTCAACTCTCATCACCGATAATTACCCCGAAATAATCTGGGGTACCATTCGTTGGGGAATCAATCAGACCCTTAGCTTGCCTGAAGAAGTCGCCCTATTTAGCGCAACGTCGACTCGGGCAGAAACCTCTAAAATAACACGACAGAGTGGCTCGCACCTTACTGAATATGTCAGATGGCAGTTCGTGCCGTTGCGTGACAACAAAGTACTTTTCAGATTAGTC',
# 'GAATTCTTGCAGGGAAGTGATGAGGGTAATAATCTTGTGCCAGTATAGAAGTGATGTAGAGTTGTATACGTGACGCAGTGCGATTCCTGGTGCTAACGCCCGGCCAAGATCACGACGAAGGCCACCTAACGGCAGCAGTAAGTATGCGCAGAGGAAGGTAGATCGAAACTTGCGACGCTAATCTATAGCTCTTTGGAAATAAATTACGGCTCAAGCCGTTTATTTCCACCAAACAGGTGCTATCATTTGACTTGAGGTCTTGTATTACTCGTTAGAAGAAATCGTGTTAAGCCCTGCAACCCGCGACGACAGAGGGGCC',
# 'TGCGGGCGAACTCTCAGCGTACATCGTTAGCTACCCGTCTGTGCAAACCCGCCAAAAAACGGACAAGATAGTCAGCGGCTAAAACGTCGACCAACAGTATTTGAGTAGAATAGATTGTTCTCTTCTGCTTTACTTGAGTTGTTTACCGCCAGGTGGCAACGGCTATCGGTAGATAATTCATCACTTACTGAGGTTCTAAGACTCTGTGTAAGGTATACGGAAGATTTACCTGGCCAACGAGTTGTATTGCCGATACCCGTGCGAGCACGCGACACCACCAACCAGCGGCACGATCCTTAGTTGAGCGAGGTTTCTGTCT',
# 'GTCATCGAACTGTAGGGAGCGGGGTAGAAGTAGAATAATCAGAAAAAGATTACGTTGCACGGCGCCGTACTCTAGTCGCGCATCGGTTCAGCCTGGGGCGCGGTCTTCGAGTGCACACACCACGTGGGCGCTAACTAATTATGAGAGAAAGCGTTCTTATAAGAGACAGTTCCTGAGATCGGATAGGGTGAGTTGACTATCATTGCCCCGGCTCTAAAACTCCAATGCATCTATGAGCGTCAGCATACTCGGTGTCCTACCTAGCAAAATTAATCTCTCCCTACGTAGTTTAACAGCATACGCCCTTCCTTGATTTTGG',
# 'TGTTGTTTGAGTAGAAATTTCTCATCCCCCGACCGCTGTATAGTCAACGGTTTGCGATGCCTTCCATAGGGATTAACGCAACACATGGCTGCTGCAGCTTCTGACTGTGTGAAGCATTGTCGTGGAGCCTTAATCGCATTCGAGCTTCCCTGTGCCGCTTATTGCGCCTGGATGGGCTAGCCCCCTGCGTACGCACAGCCTTCACTAGTTGTAGGAGTATTCCCCCGTGAGCCGGCGAAATAGTGTGCGTTGGGCCACTAATCTGTCCCAATCTACTCCCGTATTTAGATATCTTCGACGCTAGGTGAATAAGGCTTCT',
# 'TTGTTTGATGTACGATCTTTTGCTTACGAAGCCCTACGCGTAAAGAGCTCTTGCGCTCCCTACACAAGAATTGAAGTCTACGCGACGTTTGTCAACTGATGATTGCCCTGTTGCTAGCGGGTACACGGCTGTAAGGAATATTTTGATGTGGAATTACCACCTCACCTGTAATTATCCAGAAAGTTCATGACTACAGGAACCGCATCGGGAAACGACTCCTACGTCCCTCGTATGCGGAGAATAGCATAGTCTGTCCCCGTTAGCGTCTTCGCAGCAGTTGGGCTCGGGTCGGTAGAGTAGAATAATAAGGCAGCGGAGT',
# 'GATGTCGTCACAATAGACAAATAGATCCACTCACCTAGTCGACGTCCTGATGACCGTCTAAACCGCTAACAAACCCCTCCTTCTCCGCTGAAACCACACCACGAAGTCGCATCGACTCGCGGCTAACGCAGTGTGACTCATAGATCCCCCCAGAGATAACACCTCAATGATCTGAATAATCTCAAAGCGTGTGGAACTCAGAATACTAGGTAGCATGTGTGGCAACACGTCTTGGGCGACCAGGATCAAATCACAGGAGTTAAAACCTTGACCAAAGATATTGGTTGGTTCCGTATGTTTGCATCCGGTTACTCAGTGC'
# ],
#     15, 20, 2000))